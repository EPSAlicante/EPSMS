######################################################
                     Menu Guide 
######################################################


Execute the Control Menu '/etc/ansible/menu.py'


Control Menu's options:


 1. (Re)Configure System                    
 
    Configuration of System: Introduce parameters and start System
    
    See CONFIGURE file to get details about required parameters.


 2. Configure Extra variables

    Configuration of extra variables: Modify extra parameters and reload System

    See CONFIGEXTRAfile to get details about extra parameters.
 

 3. Add Node(s)                             

    To configure Linux/Unix hosts as nodes (hosts accessed by Control Host).

    SSH connection to hosts as 'root' are required. If connection is done, the 'remote user' will be created, Control Host will be able to access with 'remote user' without password (using authorized_keys) and sudo will be installed and configured to permit 'remote user' to execute every command with sudo.

    After configuration the conection with 'remote user' will be tested, showing an 'OK' or error message.

    We can repeat the same operation for several hosts until we decided to finish. 

    In that moment script will start the 'Scanning Networks to discover hosts (nodes and outsiders)' operation to discover the hosts configured as new nodes and the 'Configuring nodes' operation to install and configure nodes (including new nodes).

    When 'Getting data from nodes' (basic, packages and executables) operations were started by crontab, we would get information about new nodes (of course, we can start operations manually to get info immediatly)   


 4. Stop/Start/Restart System                             

    Stop System deleting crontab entries -> This way no new operations will be started (but operations started are still runnnig)

    Start System adding crontab entries -> This way operations will be started with their own frequency

    Restart System deleting crontab entries and adding crontab entries again


 5. Scan Network                            

    'Scanning Networks to discover hosts (nodes and outsiders)' operation will start, scanning 'working subnets' to discover hosts (Linux/Unix and Windows nodes if 'check windows nodes' was selected), trying to connect to them (with 'remote user' or 'windows user') and clasifying as nodes (if we are able to connect to them) or outsiders (if we can't do it), modifying the inventory of nodes.


 6. Install Nodes

    'Configuring Nodes' operation will start, connecting to nodes (Linux/Unix nodes) to install required software (Munin and Nagios clients) and configure them. 

    Before start operation, script ask about a required parameter:

   	* Hostname or IP address to connect. If we don't introduce any information, script will start connecting to all nodes, in other case script will check if hostname or IP is a node before start.


 7. Get Data from Nodes               

    'Getting (basic/packages/executables) data from nodes' operation will start, connecting to nodes (Linux/Unix nodes) to get (basic, packages and executables) information about them, saving on inventory database and updating web services.

    Before start operation, script ask about two required parameters:

    	* Type of information to get from nodes: basic, packages, executables or all (by default the parameter is all)
     
    	* Hostname or IP address to connect. If we don't introduce any information, script will start operation connecting to all nodes, in other case script will check if hostname or IP is a node before start. 


 8. Get Data from Windows Nodes            

    'Getting data from windows nodes' operation will start, connecting to windows nodes to get information about them, saving on inventory database and updating web services (only if 'check windows nodes' was selected).


 9. Scan vulnerabilities

    'Checking vulnerabilities (with Openvas) from hosts' operation will start, connecting to every host (outsiders, nodes and winNodes) scanning vulnerabilites, getting security information, making reports and updating wiki pages.

    Before start operation, script ask about a required parameter:

        * Hostnames List to scan. If we don't introduce any information, script will start scanning all hosts, in other case script will check if all hostnames of List are in inventory (as node, winNode or outsider) and starts scanning for them.

    
 e. Check System Errors                     

    Any error connecting to nodes (Linux/Unix or Windows) or getting information about them, will create a file in Control Host showing problems in '/var/log/ansible/errors.log'. This option will check it.

    Before check error file, script ask about a required parameter:

    	* View summary or details. 'summary' will show just lines where errors were produced, and 'details' will show the whole file.


 m. Check DB (SQL) Errors                   

    Any error in SQL operations with Mysql database, will create a file in Mysql Host showing problems in '/var/log/ansible-mysql-errors.log'. This option will check it.

    Before check error file, script ask about a required parameter:

    	* View summary or details. 'summary' will show just lines where errors were produced, and 'details' will show the whole file.
   

 c. Clean System & DB Errors                

    If error files have been checked and solved, this option permit delete both files.
 

 l. List Servers & Nodes
 
    This option show servers' list (Control Server, Nagios Server, Munin Server and Web Server), nodes' list (Linux/Unix) and windows nodes' list. 


 s. View System Configuration

    This option show the whole list of parameters introduced in the configuration system.


 x. View Executions List         

    This option show a list of executions finished.


 r. Log Running Executions (Crt+C to Exit)           

    Temporal logs of running executions are created in '/var/log/ansible' directory with 'tmp' extension and a name describing operation.

    Show running executions (as previous option) with an index number to choice, and wait for a number to list (with 'tail' command) the log file choiced (if no number is introduced, system log is shown).


 q. Quit Menu                               
 
    Exit



######################################################
