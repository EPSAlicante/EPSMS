---
# OpenVas Server Configuration

- name: Check  openvas
  shell: (openvas-check-setup --v7 > /dev/null && echo "OK") || echo "No" executable=/bin/bash
  register: setupOpenvas
  ignore_errors: yes
  changed_when: False

- name: Check running tasks
  shell: (omp -u admin -w {{ passwdOpenvas }} -G >/dev/null|grep -i "Running" > /dev/null && echo "Running") || echo "No" executable=/bin/bash
  register: checkTasks
  ignore_errors: yes
  changed_when: False

- name: Create OpenVAS CA Certificates
  shell: bash -x openvas-mkcert -q executable=/bin/bash
  ignore_errors: yes
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"
 
- name: Synchronise Network Vulnerability Tests (it can take a long time)
  shell: /usr/bin/expect -c 'spawn openvas-nvt-sync --rsync; expect "Run migration now*"; send "y\r"; interact;' 
  ignore_errors: yes
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

- name: start openvas-scanner service
  service: name=openvas-scanner state=started enabled=yes
  ignore_errors: yes
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

- name: Synchronise SCAP Feed (it can take a long time)
  shell: openvas-scapdata-sync
  ignore_errors: yes
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

- name: Synchronise CertData Feed (it can take a long time)
  shell: openvas-certdata-sync
  ignore_errors: yes
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

- name: Create Manager Client Certificates
  shell: openvas-mkcert-client -n -i
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

- name: Initialise the manager database (it can take a long time)
  shell: openvasmd --rebuild
  ignore_errors: yes
  notify: restart openvas-manager
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

- name: Check Admin user
  shell: (openvasmd --list-users|grep "admin") || echo "No" executable=/bin/bash
  register: userCreated
  changed_when: False
  ignore_errors: yes
  when: checkTasks.stdout == "No"

- name: Create Admin user
  shell: openvasmd --create-user=admin --role=Admin && openvasmd --user=admin --new-password={{ passwdOpenvas }} executable=/bin/bash
  notify: restart openvas-manager
  ignore_errors: yes
  when: checkTasks.stdout == "No" and userCreated.stdout == "No"

- name: Check Admin user access
  shell: (omp -u admin -w {{ passwdOpenvas }} -g > /dev/null) || echo "No" executable=/bin/bash
  register: userAccess 
  changed_when: False 
  ignore_errors: yes
  when: checkTasks.stdout == "No"

- name: Config Admin user (set password)
  shell: openvasmd --user=admin --new-password={{ passwdOpenvas }} executable=/bin/bash
  notify: restart openvas-manager
  ignore_errors: yes
  when: checkTasks.stdout == "No" and userAccess.stdout == "No"

- name: Configure /etc/sysconfig/gasd file (adding GSA_ADDRESS with the Openvas server IP)
  lineinfile: name=/etc/sysconfig/gsad state=present regexp='^GSA_ADDRESS=' line='GSA_ADDRESS=0.0.0.0'
  ignore_errors: yes
  notify: restart gsad
  when: checkTasks.stdout == "No"

- name: start gsad service
  service: name=gsad state=started enabled=yes
  ignore_errors: yes
  when: setupOpenvas.stdout != "OK" and checkTasks.stdout == "No"

