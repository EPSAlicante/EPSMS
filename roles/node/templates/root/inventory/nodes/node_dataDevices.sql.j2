{# The source code packaged with this file is Free Software, Copyright (C) 2016 by #}
{# Unidad de Laboratorios, Escuela Politecnica Superior, Universidad de Alicante :: <epsms at eps.ua.es>. #}
{# It's licensed under the AFFERO GENERAL PUBLIC LICENSE unless stated otherwise. #}
{# You can get copies of the licenses here: http://www.affero.org/oagpl.html #}
{# AFFERO GENERAL PUBLIC LICENSE is also included in the file called "LICENSE". #}
{#                                                                              #}
{#                                                                              #}
# Generating SQL for Devices of {{ inventory_hostname }}

{% if hostvars[inventory_hostname]['ansible_devices'] is defined %}
{% for device in hostvars[inventory_hostname]['ansible_devices'] -%}
{% set device_loop = loop -%}
CHECK_DEVICE_{{ loop.index }}: SELECT * FROM Device WHERE Server='{{ inventory_hostname }}' AND Name='{{ device }}' AND Model='{{ hostvars[inventory_hostname]['ansible_devices'][device]['model'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['model'] is defined else "" }}' AND Host='{{ hostvars[inventory_hostname]['ansible_devices'][device]['host'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['host'] is defined else "" }}' AND Scheduler='{{ hostvars[inventory_hostname]['ansible_devices'][device]['scheduler_mode'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['scheduler_mode'] is defined else "" }}' AND Size='{{ hostvars[inventory_hostname]['ansible_devices'][device]['sectors']|int * hostvars[inventory_hostname]['ansible_devices'][device]['sectorsize']|int if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['sectors'] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['sectorsize'] is defined else "0" }}' AND Vendor='{{ hostvars[inventory_hostname]['ansible_devices'][device]['vendor'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['vendor'] is defined else "" }}' AND Auto AND End IS NULL;

UPDATE_DEVICE_{{ loop.index }}: UPDATE Device SET Checked=NOW() WHERE Server='{{ inventory_hostname }}' AND Name='{{ device }}' AND Model='{{ hostvars[inventory_hostname]['ansible_devices'][device]['model'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['model'] is defined else "" }}' AND Host='{{ hostvars[inventory_hostname]['ansible_devices'][device]['host'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['host'] is defined else "" }}' AND Scheduler='{{ hostvars[inventory_hostname]['ansible_devices'][device]['scheduler_mode'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['scheduler_mode'] is defined else "" }}' AND Size='{{ hostvars[inventory_hostname]['ansible_devices'][device]['sectors']|int * hostvars[inventory_hostname]['ansible_devices'][device]['sectorsize']|int if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['sectors'] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['sectorsize'] is defined else "0" }}' AND Vendor='{{ hostvars[inventory_hostname]['ansible_devices'][device]['vendor'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['vendor'] is defined else "" }}' AND Auto AND End IS NULL; 


INSERT_DEVICE_{{ loop.index }}: INSERT INTO Device (Name,Server,Model,Host,Scheduler,Size,Vendor,Init,Checked,Auto) VALUES ('{{ device }}','{{ inventory_hostname }}', '{{ hostvars[inventory_hostname]['ansible_devices'][device]['model'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['model'] is defined else "" }}', '{{ hostvars[inventory_hostname]['ansible_devices'][device]['host'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['host'] is defined else "" }}', '{{ hostvars[inventory_hostname]['ansible_devices'][device]['scheduler_mode'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['scheduler_mode'] is defined else "" }}', '{{ hostvars[inventory_hostname]['ansible_devices'][device]['sectors']|int * hostvars[inventory_hostname]['ansible_devices'][device]['sectorsize']|int if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['sectors'] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['sectorsize'] is defined else "0" }}', '{{ hostvars[inventory_hostname]['ansible_devices'][device]['vendor'] if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['vendor'] is defined else "" }}', NOW(), NOW(), 1);

{% if hostvars[inventory_hostname]['ansible_devices'][device] is defined and hostvars[inventory_hostname]['ansible_devices'][device]['partitions'] is defined %}
{% for partition in hostvars[inventory_hostname]['ansible_devices'][device]['partitions'] -%}

CHECK_PARTITION_{{ device_loop.index }}_{{ loop.index }}: SELECT * FROM Partition WHERE Server='{{ inventory_hostname }}' AND Device='{{ device }}' AND Name='{{ partition }}' AND Size='{{ hostvars[inventory_hostname]['ansible_devices'][device]['partitions'][partition]['sectors']|int * hostvars[inventory_hostname]['ansible_devices'][device]['partitions'][partition]['sectorsize']|int }}' AND Auto AND End IS NULL;

UPDATE_PARTITION_{{ device_loop.index }}_{{ loop.index }}: UPDATE Partition SET Checked=NOW() WHERE Server='{{ inventory_hostname }}' AND Device='{{ device }}' AND Name='{{ partition }}' AND Size='{{ hostvars[inventory_hostname]['ansible_devices'][device]['partitions'][partition]['sectors']|int * hostvars[inventory_hostname]['ansible_devices'][device]['partitions'][partition]['sectorsize']|int }}' AND Auto AND End IS NULL;

INSERT_PARTITION_{{ device_loop.index }}_{{ loop.index }}: INSERT INTO Partition (Name,Device,Server,Size,Init,Checked,Auto) VALUES ('{{ partition }}','{{ device }}','{{ inventory_hostname }}', '{{ hostvars[inventory_hostname]['ansible_devices'][device]['partitions'][partition]['sectors']|int * hostvars[inventory_hostname]['ansible_devices'][device]['partitions'][partition]['sectorsize']|int }}', NOW(), NOW(), 1);

{% endfor %}
{% endif %}

{% endfor %}
{% endif %}

END-CHECK_DEVICE: SELECT * from Device WHERE Server='{{ inventory_hostname }}' AND Auto AND End IS NULL AND Checked<'##checkedTime##';
END-UPDATE_DEVICE: UPDATE Device SET End=NOW() WHERE Server='{{ inventory_hostname }}' AND Auto AND End IS NULL AND Checked<'##checkedTime##';

END-CHECK_PARTITION: SELECT * from Partition WHERE Server='{{ inventory_hostname }}' AND Auto AND End IS NULL AND Checked<'##checkedTime##';
END-UPDATE_PARTITION: UPDATE Partition SET End=NOW() WHERE Server='{{ inventory_hostname }}' AND Auto AND End IS NULL AND Checked<'##checkedTime##';

