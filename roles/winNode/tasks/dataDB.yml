---
# The source code packaged with this file is Free Software, Copyright (C) 2016 by
# Unidad de Laboratorios, Escuela Politecnica Superior, Universidad de Alicante :: <epsms at eps.ua.es>.
# It's licensed under the AFFERO GENERAL PUBLIC LICENSE unless stated otherwise.
# You can get copies of the licenses here: http://www.affero.org/oagpl.html
# AFFERO GENERAL PUBLIC LICENSE is also included in the file called "LICENSE".


# Getting data from Windows nodes

- name: Getting Path Data from nodes
  action: path_facts
  delegate_to: "{{ hostAnsible }}" 
  register: pathFacts
  changed_when: False
  ignore_errors: yes

- name: Getting data from Windows nodes
  action: win_facts host="{{ inventory_hostname }}"
  delegate_to: "{{ hostAnsible }}"
  register: winFacts 
  changed_when: False
  ignore_errors: yes

- name: Get PID
  shell: echo "$$" executable={{ path.bash }}
  delegate_to: "{{ hostAnsible }}"
  register: PID
  changed_when: False
  ignore_errors: yes
  when: winFacts|success

- name: Create nodes directory (inside inventory)
  file: path={{ pathInventoryDirectory|default('/root/inventory') }}/winNodes owner=root group=root state=directory
  delegate_to: "{{ hostMysql }}"
  ignore_errors: yes
  when: winFacts|success

- name: Generate sql basic file for WinNode (in Mysql Server)
  template: src=root/inventory/winNodes/winNode_basic.sql.j2 dest={{ pathInventoryDirectory|default('/root/inventory') }}/winNodes/{{ inventory_hostname }}_basic.{{ PID.stdout }}.sql owner=root group=root mode=0640
  delegate_to: "{{ hostMysql }}"
  ignore_errors: yes
  when: winFacts|success

- name: Generate sql files (in Mysql Server)
  template: src=root/inventory/winNodes/winNode_data{{ item }}.sql.j2 dest={{ pathInventoryDirectory|default('/root/inventory') }}/winNodes/{{ inventory_hostname }}_data{{ item }}.{{ PID.stdout }}.sql owner=root group=root mode=0640
  with_items:
    - Hardware
    - Software
    - Drivers
    - Services
    - Processors
    - Bios
    - Buses
    - PortConnectors
    - Shares
    - BaseBoards
    - OnBoardDevices
    - GroupsUsers
    - NetworkAdapters
    - Memories
    - Disks
  delegate_to: "{{ hostMysql }}"
  ignore_errors: yes
  when: winFacts|success

- name: Generate script node.py (in Mysql Server)
  template: src=root/inventory/winNodes/{{ item }}.j2 dest={{ pathInventoryDirectory|default('/root/inventory') }}/winNodes/{{ item }} owner=root group=root mode=0750 
  with_items:
    - winNode.py
  delegate_to: "{{ hostMysql }}"
  ignore_errors: yes
  when: winFacts|success

- name: Execute script node.py (in Mysql Server)
  shell: '{{ pathInventoryDirectory|default("/root/inventory") }}/winNodes/winNode.py {{ inventory_hostname }} "{{ PID.stdout }}" > /dev/null 2> /var/log/ansible/.winNode_{{ PID.stdout }}-mysql-errors.tmp; [ -s /var/log/ansible/.winNode_{{ PID.stdout }}-mysql-errors.tmp ] && (echo "### ERROR winNodes dataDB - winNode.py {{ inventory_hostname }} {{ PID.stdout }} - $(date) ###" >> /var/log/ansible/mysql-errors.log; cat /var/log/ansible/.winNode_{{ PID.stdout }}-mysql-errors.tmp >> /var/log/ansible/mysql-errors.log); rm -f /var/log/ansible/.winNode_{{ PID.stdout }}-mysql-errors.tmp executable=/bin/bash'
  delegate_to: "{{ hostMysql }}"
  changed_when: False
  ignore_errors: yes
  when: winFacts|success

- name: Copy host-items.txt (in Wiki Master)
  template: src=var/lib/dokuwiki/data/pages/inventory/host-{{ item }}.txt.j2 dest=/var/lib/dokuwiki/data/pages/inventory/.{{ inventory_hostname|lower }}-{{ item }}.txt.tmp owner=root group=root mode=0644
  with_items:
    - system
    - processors
    - bios
    - memory
    - baseboards
    - networkadapters
    - devices
    - operatingsystem
    - logicaldevices
    - logicalnetworkadapters
    - domain
    - drivers
    - services
    - buses
    - connectors
    - accounts
    - shares
  delegate_to: "{{ hostWeb }}"
  ignore_errors: yes
  when: winFacts|success

- name: Commit changes of host-items.txt & update (in Wiki Server)
  shell: (/usr/bin/php /usr/share/dokuwiki/bin/dwpage.php commit -m "Ansible check at $(date '+%Y-%m-%d %H:%M:%S')" /var/lib/dokuwiki/data/pages/inventory/.{{ inventory_hostname|lower }}-{{ item }}.txt.tmp inventory:{{ inventory_hostname|lower }}-{{ item }}) && chmod 0464 /var/lib/dokuwiki/data/pages/inventory/{{ inventory_hostname|lower }}-{{ item }}.txt && (chmod 0464 /var/lib/dokuwiki/data/attic/inventory/{{ inventory_hostname|lower }}-{{ item }}.txt.* || true)
  with_items:
    - system
    - processors
    - bios
    - memory
    - baseboards
    - networkadapters
    - devices
    - operatingsystem
    - logicaldevices
    - logicalnetworkadapters
    - domain
    - drivers
    - services
    - buses
    - connectors
    - accounts
    - shares
  delegate_to: "{{ hostWeb }}"
  changed_when: False
  ignore_errors: yes
  when: winFacts|success

- name: Copy host.txt (in Wiki Master)
  template: src=var/lib/dokuwiki/data/pages/inventory/host.txt.j2 dest=/var/lib/dokuwiki/data/pages/inventory/.{{ inventory_hostname|lower }}.txt.tmp owner=root group=root mode=0644
  delegate_to: "{{ hostWeb }}"
  changed_when: False
  ignore_errors: yes
  when: winFacts|success and passwdAdmin|default("") != ""

- name: Commit changes of host.txt & update (in Wiki Server)
  shell: (/usr/bin/php /usr/share/dokuwiki/bin/dwpage.php commit -m "Ansible check at $(date '+%Y-%m-%d %H:%M:%S')" /var/lib/dokuwiki/data/pages/inventory/.{{ inventory_hostname|lower }}.txt.tmp inventory:{{ inventory_hostname|lower }}) && chmod 0464 /var/lib/dokuwiki/data/pages/inventory/{{ inventory_hostname|lower }}.txt && (chmod 0464 /var/lib/dokuwiki/data/attic/inventory/{{ inventory_hostname|lower }}.txt.* || true)
  delegate_to: "{{ hostWeb }}"
  changed_when: False
  ignore_errors: yes
  when: winFacts|success and passwdAdmin|default("") != ""

- name: Get userApache in Web Server
  shell: stat -c "%U" /var/lib/dokuwiki/data executable=/bin/bash
  register: userApacheServer
  delegate_to: "{{ hostWeb }}"
  changed_when: False
  ignore_errors: yes
  when: winFacts|success

- name: Change owner of /var/lib/dokuwiki/data to userApache
  shell: "find /var/lib/dokuwiki/data ! -user {{ userApacheServer.stdout }} -exec chown {{ userApacheServer.stdout }} {} \\; executable=/bin/bash"
  delegate_to: "{{ hostWeb }}"
  changed_when: False
  ignore_errors: yes
  when: winFacts|success

