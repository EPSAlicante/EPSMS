---
# InstalaciÃ³n del servidor Ansible 

- name: Be sure less, nmap, rsync, bind-utils, coreutils, sshpass & python-pip are installed (yum)
  yum: pkg={{ item }} enablerepo={{ labelEpel }} state=installed
  with_items: "{{ packageAnsible }}"
  when: ansible_pkg_mgr == "yum"

#- name: Be sure less,nmap,rsync & bind9-host are installed (apt)
#  apt: pkg={{ item }} state=installed update_cache=yes force=yes
#  with_items: "{{ packageAnsible }}"
#  when: ansible_pkg_mgr == "apt"

- name: Upgrade paramiko python package to >=1.15
  shell: ver=`pip freeze|grep paramiko|sed 's/^.*==//g'|cut -d'.' -f2`; [ "$ver" -lt 15 ] && (pip install ecdsa; pip install paramiko --upgrade) || echo "Updated" 
  register: updateParamiko 
  changed_when: updateParamiko.stdout != "Updated"
  ignore_errors: yes

- name: Getting Path Data
  action: path_facts
  register: pathFacts
  changed_when: False
  ignore_errors: yes
  when: winNodes == "y" and path is not defined

- name: Get architecture 
  shell: '{{ path.uname }} -m 2>/dev/null'
  register: architecture 
  changed_when: False
  ignore_errors: yes
  when: winNodes == "y"

- name: wmic installed?
  shell: (wmic --version > /dev/null && echo "Yes") || echo "No" executable=/bin/bash 
  register: wmicInstalled
  changed_when: False
  ignore_errors: yes
  when: winNodes == "y"

- name: Create wmic directory
  file: path=/root/wmic owner=root group=root mode=0750 state=directory
  ignore_errors: yes
  when: winNodes == "y" and wmicInstalled.stdout|default("No") != "Yes"

- name: Copy wmic (rpm) 
  copy: src=root/wmic/wmic-40.{{ architecture.stdout|default("x86_64") }}.rpm dest=/root/wmic/wmic-40.{{ architecture.stdout|default("x86_64") }}.rpm owner=root group=root mode=0640 
  ignore_errors: yes
  when: winNodes == "y" and wmicInstalled.stdout|default("No") != "Yes"

- name: Install wmic (rpm)
  shell: (wmic --version > /dev/null || rpm -fi /root/wmic/wmic-40.{{ architecture.stdout|default("x86_64") }}.rpm) 2>/dev/null executable=/bin/bash
  ignore_errors: yes
  when: winNodes == "y" and wmicInstalled.stdout|default("No") != "Yes"
