---
# ConfiguraciÃ³n del servidor Ansible 

- name: Enlazar /[pathAnsibleLibrary]/path_facts -> /[pathAnsible]/scripts/path_facts.py
  file: path={{ pathAnsibleLibrary }}/path_facts state=link src={{ pathAnsible }}/scripts/path_facts.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/base_facts -> /[pathAnsible]/scripts/base_facts.py
  file: path={{ pathAnsibleLibrary }}/base_facts state=link src={{ pathAnsible }}/scripts/base_facts.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/site_facts -> /[pathAnsible]/scripts/site_facts.py
  file: path={{ pathAnsibleLibrary }}/site_facts state=link src={{ pathAnsible }}/scripts/site_facts.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/site_factsPackages -> /[pathAnsible]/scripts/site_facts.packages.py
  file: path={{ pathAnsibleLibrary }}/site_factsPackages state=link src={{ pathAnsible }}/scripts/site_facts.packages.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/site_factsExes -> /[pathAnsible]/scripts/site_facts.exes.py
  file: path={{ pathAnsibleLibrary }}/site_factsExes state=link src={{ pathAnsible }}/scripts/site_facts.exes.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/win_facts -> /[pathAnsible]/scripts/win_facts.py
  file: path={{ pathAnsibleLibrary }}/win_facts state=link src={{ pathAnsible }}/scripts/win_facts.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/net_facts -> /[pathAnsible]/scripts/net_facts.py
  file: path={{ pathAnsibleLibrary }}/net_facts state=link src={{ pathAnsible }}/scripts/net_facts.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/openvas_facts -> /[pathAnsible]/scripts/openvas_facts.py
  file: path={{ pathAnsibleLibrary }}/openvas_facts state=link src={{ pathAnsible }}/scripts/openvas_facts.py force=yes

- name: Enlazar /[pathAnsibleLibrary]/db_facts -> /[pathAnsible]/scripts/db_facts.py
  file: path={{ pathAnsibleLibrary }}/db_facts state=link src={{ pathAnsible }}/scripts/db_facts.py force=yes

- name: Create directory /var/log/ansible
  file: path=/var/log/ansible owner=root group=root mode=0755 state=directory

- name: Config ansible.cfg (host_key_checking)
  lineinfile: name={{ pathAnsible }}/ansible.cfg state=present regexp='^host_key_checking = False' insertbefore='host_key_checking' line='host_key_checking = False'

- name: Config ansible.cfg (sudo_flags)
  lineinfile: name={{ pathAnsible }}/ansible.cfg state=present regexp='^sudo_flags' insertbefore='sudo_flags' line='sudo_flags = -H'

- name: Config ansible.cfg (scp_if_ssh)
  lineinfile: name={{ pathAnsible }}/ansible.cfg state=present regexp='^scp_if_ssh = True' insertbefore='scp_if_ssh' line='scp_if_ssh = True'

- name: Find mod_args.py file
  shell: find /usr/lib/python*/site-packages/ansible/parsing/mod_args.py|head -1 executable=/bin/bash
  register: fileModArgs
  changed_when: False
  ignore_errors: yes 

- name: Add 'win_facts' in mod_args.py
  lineinfile: name={{ fileModArgs.stdout }} state=present regexp='win_facts' insertafter='^RAW_PARAM_MODULES' line='    \'win_facts\','
  when: fileModArgs.stdout|default("") != ""

- name: Add 'db_facts' in mod_args.py
  lineinfile: name={{ fileModArgs.stdout }} state=present regexp='db_facts' insertafter='^RAW_PARAM_MODULES' line='    \'db_facts\',' 
  when: fileModArgs.stdout|default("") != ""

#- name: Add 'Defaults:sshUser !requiretty' in /etc/sudoers
#  lineinfile: 'name=/etc/sudoers state=present regexp="^Defaults:{{ sshUserNodes }} !requiretty" line="Defaults:{{ sshUserNodes }} !requiretty"'
#  when: sshUserNodes != "root"
